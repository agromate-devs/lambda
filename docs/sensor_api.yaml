openapi: 3.0.3
info:
  title: SensorAPI - AgroMate
  description: |-
   API di AgroMate per prendere i dati da un agrosmart
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: "1.0"
externalDocs:
  description: Github
  url: https://github.com/agromate-devs
servers:
  - url: https://mt1oxsz4qf.execute-api.eu-central-1.amazonaws.com
tags:
  - name: sensor
    description: Gestisci piante assegnate al sensore
paths:
  /:
    get:
      tags:
        - sensor
      summary: Dati dell'agrosmart
      description: Prende i dati da un agrosmart salvati nel DB
      operationId: getSensor
      parameters:
        - name: uuid
          in: path
          description: ID Agrosmart
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Operazione eseguita con successo
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Measurations'
        '500':
          description: Body o richiesta invalida
          content:
            text/html:
              schema:
                $ref: '#/components/schemas/InvalidRequest'
components:
  schemas:
    Measurations:
      type: array
      items:
        $ref: '#/components/schemas/SensorData'
    SensorData:
      required:
        - uuid
        - timestamp
        - hour
        - humidity
        - media_month
        - soil_humidity
        - temperature
      type: object
      properties:
        uuid:
          type: string
          format: string
          example: 9c9b89fb-a29e-4c91-8aa4-660475e8
        timestamp:
          type: number
          format: number
          example: 1696834199
        hour:
          type: boolean
          format: boolean
          example: true
        humidity:
          type: number
          format: number
          example: 64
        media_month:
          type: boolean
          format: boolean
          example: true
        soil_humidity:
          type: number
          format: number
          example: 50
        temperature:
          type: number
          format: number
          example: 20.0
    ValidRequest:
      type: string
      example: OK
    InvalidRequest:
      type: string
      example: Internal Server Error in endpoint_name
  requestBodies:
    WishList:
      description: WishList object that needs to be added to the store
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SensorData'
  securitySchemes:
    petstore_auth:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://petstore3.swagger.io/oauth/authorize
          scopes:
            write:pets: modify pets in your account
            read:pets: read your pets
    api_key:
      type: apiKey
      name: api_key
      in: header